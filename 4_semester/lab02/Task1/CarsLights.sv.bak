module carsLights(
input logic clk,
input logic L,
input logic R,
input logic reset,
output logic y);
typedef enum logic [1:0] {S0, S1, S2, S3, S4, S5, S6} statetype;

statetype state, nextstate;

// регистр состояния
always_ff @(posedge clk, posedge reset)
if (reset) state <= S0;
else state <= nextstate;

// логика следующего состояния
always_comb
case (state)
S0: nextstate = L & ~R ? S1 : ~L & R ? S4 : S0 ;
S1: nextstate = S2;
S2: nextstate = S3;
S3: nextstate = S0;
S4: nextstate = S5;
S5: nextstate = S6;
S6: nextstate = S0;
default: nextstate = S0;
endcase

// выходная логика
assign y = (state == S0);
endmodule